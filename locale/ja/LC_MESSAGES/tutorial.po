# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021 Fortran programming language community
# This file is distributed under the same license as the fpm package.
# Tomohiro Degawa <degawa.tomohiro@gmail.com>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: fpm \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-20 15:35+0900\n"
"PO-Revision-Date: 2022-03-22 20:59+0900\n"
"Last-Translator: 出川智啓 <degawa.tomohiro@gmail.com>\n"
"Language-Team: degawa <https://github.com/degawa>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../pages/tutorial/dependencies.md:1
msgid "Adding dependencies"
msgstr "依存関係の追加"

#: ../../pages/tutorial/dependencies.md:3
msgid ""
"This tutorial covers the usage of dependencies with fpm and how to reuse "
"existing fpm projects."
msgstr ""
"ここでは，fpmによる依存関係の利用方法と，"
"既存のfpmプロジェクトを再利用する方法を取り扱います．"

#: ../../pages/tutorial/dependencies.md:5
msgid "Using the standard library"
msgstr "標準ライブラリの利用"

#: ../../pages/tutorial/dependencies.md:7
msgid ""
"We start with a new project with fpm, we want to build a command line "
"application to read a file, find a certain pattern and replace it. Since "
"we do not want to write the replace function ourselves, we will use the "
"Fortran standard library ([stdlib](https://github.com/fortran-"
"lang/stdlib)) as dependency. In the package manifest we define *stdlib* "
"in the *dependencies* table:"
msgstr ""
"fpmを用いて新規プロジェクトを開始し，ファイルを読み込んで特定のパターンを見つけ，"
"それを置換するコマンドラインアプリケーションを構築することにします．"
"置換する関数を書きたくないので，Fortran標準ライブラリ"
"（[stdlib](https://github.com/fortran-lang/stdlib)）を依存関係として利用します．"
"パッケージマニフェスト内の*dependencies*設定項目で，*stdlib*を定義します．"

#: ../../pages/tutorial/dependencies.md:11
#: ../../pages/tutorial/dependencies.md:77
#: ../../pages/tutorial/dependencies.md:112
#: ../../pages/tutorial/hello-fpm.md:33
msgid "fpm.toml"
msgstr ""

#: ../../pages/tutorial/dependencies.md:18
msgid ""
"Now we create a module with a procedure to perform the substitution. It "
"requires three steps:"
msgstr ""
"差し替えを実行する手続をもつモジュールを作成します．"
"これには，三つの段階が必要です．"

#: ../../pages/tutorial/dependencies.md:21
msgid "reading a whole line from one unit"
msgstr "一つの装置から1行を読み込み"

#: ../../pages/tutorial/dependencies.md:22
msgid "replace the pattern in the string"
msgstr "文字列内の特定のパターンを置き換え"

#: ../../pages/tutorial/dependencies.md:23
msgid "write the new string to an output"
msgstr "出力に新しい文字列を書き出し"

#: ../../pages/tutorial/dependencies.md:25
msgid ""
"We will use the *replace\\_all* function from the *stdlib\\_strings* "
"module for this purpose. The implementation is shown here"
msgstr ""
"これを実現するために，*stdlib\\_strings*モジュールにある"
"*replace\\_all*関数を用います．実装を以下に示します．"


#: ../../pages/tutorial/dependencies.md:28
msgid "src/demo.f90"
msgstr ""

#: ../../pages/tutorial/dependencies.md:33
msgid "Finally, we need a command line driver to make use of our new function."
msgstr "最後に，作成した新しい手続を使えるようにするために，コマンドラインから呼び出すメインルーチンが必要です．"

#: ../../pages/tutorial/dependencies.md:35
#: ../../pages/tutorial/dependencies.md:125
#: ../../pages/tutorial/hello-fpm.md:52
msgid "app/main.f90"
msgstr ""

#: ../../pages/tutorial/dependencies.md:54
msgid "We can check our command line driver by running it with fpm:"
msgstr "fpmを用いてメインルーチンを呼び出し，動作を確認します．"

#: ../../pages/tutorial/dependencies.md:68
msgid "Adding a testing framework"
msgstr "テストフレームワークの追加"

#: ../../pages/tutorial/dependencies.md:70
msgid ""
"Before we continue implementing new features, we want to add some tests "
"to verify that our implementation keeps worked as we modify it. A "
"minimalist testing framework is available with [test-drive]. Since the "
"testing framework is only required when developing the package itself, "
"but not for other packages which might in the future make use of our "
"modules, we add a local dependency. The *test-drive* package is added in "
"the *dev-dependencies* table as shown below"
msgstr ""
"新機能の実装を継続する前に，いくつかテストを追加して，"
"実装を変更しても動作し続けることを確認します．"
"[test-drive](https://github.com/fortran-lang/test-drive)を用いることで，"
"最小限のテストフレームワークが利用できるようになります．"
"テストフレームワークはパッケージを開発するときにのみ必要で，"
"将来的に作成するであろう他のパッケージには必要ないので，限定的な依存関係として追加します．"
"*test-drive*パッケージを，下記に示すように，*dev-dependencies*設定項目に追加します．"

#: ../../pages/tutorial/dependencies.md:85
msgid ""
"For a development dependency like a testing framework we choose a strict "
"version pin by specifying the *tag* we want to use."
msgstr ""
"テストフレームワークのような開発時に参照する依存関係に対しては，"
"タグを指定して，使用したい厳密なバージョンを選択します．"

#: ../../pages/tutorial/dependencies.md:88
msgid ""
"Now we can write a simple unit test, since our function works with units,"
" we will create scratch units to create the input and capture the output."
" For now we will add a simple one line substitution as single test case"
msgstr ""
"ここで作成している関数はそれ単体で動作するため，単純な単体テストを記述できます．"
"入力を生成して出力を取得する単体機能を作成することにします．"
"とりあえず，単純な1行の差し替えを，一つのテストケースとして追加します．"

#: ../../pages/tutorial/dependencies.md:91
msgid "test/main.f90"
msgstr ""

#: ../../pages/tutorial/dependencies.md:96
msgid "We run our new test using fpm"
msgstr "fpmを用いて作成したテストを実行します．"

#: ../../pages/tutorial/dependencies.md:104
msgid ""
"Creating the scratch units for multiple unit tests will be repetitive, "
"this kind of tasks can usually be done in a separate procedure and reused"
" in several tests."
msgstr ""
"複数の単体テストにおける単体機能の作成は，反復的な作業になります．"
"この種の作業は通常，独立した手順で行うことができ，いくつかのテストで再利用されます．"

#: ../../pages/tutorial/dependencies.md:107
msgid "Target-specific dependencies"
msgstr "ビルド対象固有の依存関係"

#: ../../pages/tutorial/dependencies.md:109
msgid ""
"Dependencies can also be used for specific targets only. This can be used"
" for adding a command line interface package, which is only used for the "
"executable but not part of the library dependencies."
msgstr ""
"依存関係は，特定のビルド対象に対してのみ利用できます．"
"ここで導入するビルド対象固有の依存関係は，"
"実行ファイルにコマンドラインインタフェースを追加するパッケージであって，"
"ライブラリの依存関係ではありません．"

#: ../../pages/tutorial/dependencies.md:118
msgid ""
"We restructure our main program a bit for using [M\\_CLI2] to handle the "
"command line input. The *unnamed* array contains all positional command "
"line arguments, we still use the first two as pattern and replacement, "
"and use all remaining arguments as input. We also add an option to "
"redirect the output. Our final main program looks like"
msgstr ""
"[M\\_CLI2](https://github.com/urbanjost/M_CLI2)を用いて"
"コマンドライン入力を処理するために，メインルーチンを若干再構成します．"
"配列*unnamed*は，位置関係を含むコマンドライン引数全てを保持しています．"
"最初の二つをパターンと置換に利用し，残りの全ての引数を入力として用います．"
"また，出力をリダイレクトするオプションも追加しました．"
"最終的なメインルーチンは，次のようになりました．"

#: ../../pages/tutorial/dependencies.md:130
msgid "Again we run a quick check using fpm"
msgstr "fpmを用いて簡単な確認を再度行います．"

#: ../../pages/tutorial/dependencies.md:152
msgid "The output looks as expected with two substitutions."
msgstr "期待通りに2箇所の差し替えが行われました．"

#: ../../pages/tutorial/dependencies.md:155
#: ../../pages/tutorial/hello-fpm.md:97 ../../pages/tutorial/plugins.md:90
msgid "Summary"
msgstr "まとめ"

#: ../../pages/tutorial/dependencies.md:157
#: ../../pages/tutorial/hello-fpm.md:99 ../../pages/tutorial/plugins.md:92
msgid "In this tutorial you learned how to"
msgstr "ここでは以下の方法を学びました．"

#: ../../pages/tutorial/dependencies.md:159
msgid "depend on another fpm project in the package manifest"
msgstr "パッケージマニフェスト内で別のfpmプロジェクトを参照する方法"

#: ../../pages/tutorial/dependencies.md:160
msgid "add development dependencies for testing"
msgstr "テストのために開発時の依存関係を追加する方法"

#: ../../pages/tutorial/dependencies.md:161
msgid "use dependencies for executables"
msgstr "実行ファイルに依存関係を追加する方法"

#: ../../pages/tutorial/hello-fpm.md:1
msgid "First steps with fpm"
msgstr "fpm最初の一歩"

#: ../../pages/tutorial/hello-fpm.md:3
msgid ""
"This tutorial covers the basic usage of the Fortran Package Manager (fpm)"
" command line. It will cover the generation of a new project and the "
"possibility to compile a project into an executable as well as the "
"possibility to run the resulting program."
msgstr ""
"ここでは，コマンドラインにおけるFortranパッケージマネージャ（fpm）の"
"基本的な使用方法を取り扱います．新規プロジェクトの作成や，"
"プロジェクトを実行ファイルにコンパイルする方法だけでなく，構築されたプログラムを"
"実行する方法についても取り扱います．"

#: ../../pages/tutorial/hello-fpm.md:6
msgid "To start a new project with fpm use the *fpm new* command"
msgstr "fpmで新しいプロジェクトを始めるには，*fpm new*コマンドを用います．"

#: ../../pages/tutorial/hello-fpm.md:12
msgid ""
"By default fpm creates a git repository with a dummy project in the fpm "
"standard layout"
msgstr ""
"標準では，fpmは既定の構成をもつ仮プロジェクトを含んだgitリポジトリを作成します．"

#: ../../pages/tutorial/hello-fpm.md:30
msgid ""
"This is everything we need to start our new project. First, we inspect "
"the package manifest, ``fpm.toml``, which is populated with stub entries "
"for us:"
msgstr ""
"これが，新しいプロジェクトを開始するために必要な全てです．最初に，"
"パッケージマニフェストである``fpm.toml``を見てみましょう．"
"``fpm.toml``には，仮データが記入されています．"

#: ../../pages/tutorial/hello-fpm.md:49
msgid ""
"The package manifest contains all the required meta data for the new "
"project. Next we checkout the main executable, ``app/main.f90``, fpm has "
"generated for us:"
msgstr ""
"パッケージマニフェストには，新規プロジェクトに必要な全てのメタデータが含まれています．"
"次に，fpmが生成した実行ファイル``app/main.f90``を確かめます．"

#: ../../pages/tutorial/hello-fpm.md:62
msgid ""
"The program already uses a module from our library, which we can find in "
"``src/first_steps.f90``:"
msgstr ""
"このプログラムは，既にライブラリからモジュールを`use`しています．"
"当該のモジュールは，``src/first_steps.f90``で確認できます．"

#: ../../pages/tutorial/hello-fpm.md:64
msgid "src/first_steps.f90"
msgstr ""

#: ../../pages/tutorial/hello-fpm.md:78
msgid "We can run the executable directly with the command ``fpm run``:"
msgstr "``fpm run``コマンドによって，実行ファイルを直接実行できます．"

#: ../../pages/tutorial/hello-fpm.md:86
msgid ""
"Similarly, fpm has already created a stub for testing, which can be "
"invoked with ``fpm test``:"
msgstr ""
"同様に，fpmはテストのための仮ソースを作成済みであり，``fpm test``で呼び出せます．"

#: ../../pages/tutorial/hello-fpm.md:94
msgid ""
"Fpm will automatically track changes in your project when running your "
"project using the *run* and *test* commands."
msgstr ""
"Fpmは，*run*や*test*サブコマンドによってプロジェクトを実行する際に，"
"自動的にプロジェクトの変更を追跡します．"

#: ../../pages/tutorial/hello-fpm.md:101
msgid "create a new project from the fpm command line"
msgstr "fpmコマンドラインから新規プロジェクトを作成する方法"

#: ../../pages/tutorial/hello-fpm.md:102
msgid "build and run your project executables with fpm"
msgstr "fpmを用いてプロジェクトをビルドし，実行する方法"

#: ../../pages/tutorial/hello-fpm.md:103
msgid "run tests with fpm"
msgstr "fpmを用いてテストを実行する方法"

#: ../../pages/tutorial/index.md:3
msgid "Tutorials"
msgstr "実践手引"

#: ../../pages/tutorial/index.md:6
msgid ""
"This section contains courses for learning about the usage and fpm at "
"specific examples."
msgstr ""
"ここには，使用方法やfpmの具体的な事例を学ぶための教程を掲載しています．"

#: ../../pages/tutorial/plugins.md:1
msgid "Extending fpm with plugins"
msgstr "プラグインによるfpmの拡張"

#: ../../pages/tutorial/plugins.md:3
msgid ""
"The Fortran package manager has a plugin system which allows to easily "
"extend its functionality. This tutorial will show how to install a plugin"
" with fpm and use it."
msgstr ""
"Fortranパッケージマネージャにはプラグインシステムが備わっており，"
"機能を容易に拡張できます．ここでは，プラグインをインストールし，"
"使用する方法を示します．"

#: ../../pages/tutorial/plugins.md:7
msgid "Registry search tool"
msgstr "レジストリ検索ツール"

#: ../../pages/tutorial/plugins.md:9
msgid ""
"The [fpm-search](https://github.com/urbanjost/fpm-search) project is a "
"plugin to query the package registry. Since it is built with fpm we can "
"easily install it on our system with"
msgstr ""
"[fpm-search](https://github.com/urbanjost/fpm-search)プロジェクトは"
"パッケージが登録されているfpmレジストリを照会するためのプラグインです．"
"fpmとともにビルドされているので，以下のように簡単にシステムにインストールできます．"

#: ../../pages/tutorial/plugins.md:18
msgid ""
"This will install the ``fpm-search`` binary to ``~/.local/bin`` (or "
"``%APPDATA%\\local\\bin`` on Windows)."
msgstr ""
"``fpm-search``のバイナリが``~/.local/bin``（Windowsでは"
"``%APPDATA%\\local\\bin``）にインストールされます．"

#: ../../pages/tutorial/plugins.md:21
msgid "Ensure that the installed binary is in the ``PATH``, *i.e.* run"
msgstr "インストールされたバイナリが``PATH``内にあることを確認します．"
"すなわち，次のコマンドを実行します．"

#: ../../pages/tutorial/plugins.md:28
msgid "If no binary is found, add the directory to your path using"
msgstr "バイナリが見つからない場合は，インストールされたディレクトリをパスに追加します．"

#: ../../pages/tutorial/plugins.md
msgid "Bash (Linux)"
msgstr ""

#: ../../pages/tutorial/plugins.md:34
msgid ""
"Default settings for the bash shell can be found in the ``.bashrc`` file "
"in the home directory, to append to the ``PATH`` following the "
"instructions below."
msgstr ""
"bashシェルの標準設定は，ホームディレクトリにある``.bashrc``で確認できます．"
"以下の手順で``PATH``に追加してください．"

#: ../../pages/tutorial/plugins.md:41
msgid ""
"Make sure to source your ``.bashrc`` after changing it, otherwise the "
"change will not be applied to the current shell."
msgstr ""
"``.bashrc``を変更した後，``.bashrc``を再読込してください．"
"そうしないと，変更が現在のシェルに適用されません．"

#: ../../pages/tutorial/plugins.md
msgid "Zsh (MacOS)"
msgstr ""

#: ../../pages/tutorial/plugins.md:45
msgid ""
"Default settings for the zsh shell can be found in the ``.zshrc`` file in"
" the home directory, to append to the ``PATH`` use"
msgstr ""
"zshシェルの標準設定はホームディレクトリの``.zshrc``で確認できます．"
"下記コマンドを用いて``PATH``に追加してください．"

#: ../../pages/tutorial/plugins.md:52
msgid ""
"Make sure to restart zsh after changing the ``.zshrc`` it, otherwise the "
"change will not be applied to the current shell."
msgstr ""
"``.zshrc``を変更した後，zshを再起動してください．"
"そうしないと，変更が現在のシェルに適用されません．"

#: ../../pages/tutorial/plugins.md
msgid "CMD (Windows)"
msgstr ""

#: ../../pages/tutorial/plugins.md:56
msgid ""
"The ``PATH`` variable can be modified using the pathman program from the "
"cmd prompt"
msgstr ""
"``PATH``変数は，コマンドプロンプトからpathmanプログラムを利用して変更できます．"

#: ../../pages/tutorial/plugins.md:64
msgid "Now with a working installation we can invoke our new plugin from fpm."
msgstr "インストールできたので，fpmから新しいプラグインを呼び出すことができます．"

#: ../../pages/tutorial/plugins.md:72
msgid ""
"Note that we use ``fpm search`` rather than ``fpm-search`` in the "
"command. To find a package for building a command-line interface we can "
"now type"
msgstr ""
"コマンドには，``fpm-search``ではなく``fpm search``を用いていることに注意してください．"
"コマンドラインインタフェースを構築するためのパッケージを見つけるには，次のように入力します．"

#: ../../pages/tutorial/plugins.md:81
msgid ""
"To use one of the packages in our manifest we can generate the necessary "
"dependency line by running"
msgstr ""
"パッケージを用いるために必要なマニフェストの依存関係の設定内容を，"
"次のコマンドを実行して生成します．"

#: ../../pages/tutorial/plugins.md:88
msgid ""
"Adding this line to a package manifest allows to depend on the respective"
" project."
msgstr ""
"この一行をパッケージマニフェストに追加することで，当該のプロジェクトを参照できます．"

#: ../../pages/tutorial/plugins.md:94
msgid "installing an fpm plugin"
msgstr "fpmプラグインをインストールする方法"

#: ../../pages/tutorial/plugins.md:95
msgid "use the fpm-search plugin to query the registry"
msgstr "レジストリを照会するためにfpm-searchプラグインを使用する方法"

#: ../../pages/tutorial/plugins.md:96
msgid "generate a dependency entry from a query result"
msgstr "照会結果から依存関係の設定を生成する方法"
